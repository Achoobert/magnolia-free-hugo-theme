disabled = false
languageCode = 'en-US'
languageName = 'English'
title = 'Magnolia' # This will go in the Header as well
copyright = "Designed by Ludovico Caluori ðŸŽ¨" # Please leave this here to give me some credit for my work, or BuyMeACoffee and change or remove the copyrightlink below :)
contentDir = "content/en"

# Change single params to false to remove from rendering
[params]
  subtitle = "Free Hugo theme" # This goes in the header and in the site title
  copyrightLink = "https://github.com/ololiuhqui"
  # PAGES
  [params.homepage]
    # Notice that SEO meta tags (what appears in google search results) can be set
    # in individual pages frontmatters `/content/<page>`
    ###
    preTitle = 'Free Hugo theme'
    title = "Magnolia"
    # You can use some markdown safely here as long as you don't include line breaks
    intro= """
### "Freedom makes us better humans, and makes us improve our status as a collective race faster."

**A simple, completely customizable, multilingual Hugo theme thought for professionals and small businesses.**

I built this theme with simplicity in mind, it is small and easily **customizable, responsive, modular and multilingual**. But it also leaves some space to further in-depth customization since it uses **Bootstrap** and **SCSS**.

Here there's the [theme github page](https://github.com/ololiuhqui/magnolia-free-hugo-theme), to which you should refer if you seek for more details, make sure to star the repo!

Look at what this theme is capable to do on the features page, and see a beautiful contacts page example below.
        """
    mainButton = "Features"
    mainButtonRef = "features" # Just write the name or slug of the page here
    secondButton = "Contacts"
    secondButtonRef = "contacts" # Just write the name of the pages here
    [params.homepage.description]
    enabled = true
    secondTitle = "How to use this theme"
    paragraph = """#### Install ðŸ“¥
- Install hugo extended, follow [the official installation guide](https://gohugo.io/installation/).

- Create a new site: `hugo new site <sitename>`

- Clone the theme repo as a submodule into your new site:`git init && git submodule add --depth=1 https://github.com/ololiuhqui/magnolia-free-hugo-theme themes/Magnolia`

- Copy the content from "examplesite" to your site, from the root of your new website folder: `cp -rv themes/Magnolia/exampleSite/* ./`

- Delete your default `config.toml` from the root folder of your site; the new configurations will be found in `config/_default`. The main configuration file is `config/_default/config.toml`, but most variables are overwritten or defined by the individual language configuration files (eg. `config/_default/languages/.en.toml`).

- See the website preview with `hugo serve -D`

#### Customize ðŸŽ¨
- Use your preferred color palette by modifying the Bootstrap variables in `assets/scss/custom-variables.scss`.

- Change the config files adding your own elements to the pages. You can change the page names there as well.

- Change the pages names, slugs and metadescriptions in `content/<language>/<page>.html`. The `_index.html` in the root of every content language folder is the homepage, refer to [Content organization](https://gohugo.io/content-management/organization/).

- Change the images of the website from the `static` or `content` folders (some pages use [Page bundles](https://gohugo.io/content-management/page-bundles/)), please notice that the name of the images should be the same of the ones currently present in the exampleSite

#### Add new languages ðŸš©

- Head to `config/_default/languages`.
- Duplicate one of the language files, change the language tag, name of the file (en, it, fr etc): this should be compliant with [RFC 5646](https://gohugo.io/content-management/multilingual/). Use the [RFC 5646 Language Tags List](https://gist.github.com/msikma/8912e62ed866778ff8cd) for a quicker setup.
- Translate the variables values inside the `.toml` file accordingly to the language.
- In the `/content` directory, duplicate one of the language folders and change the name accordingly to your new language as in step 2.
- For each of the `.html` file in `/content`, you can change `title` and `slug` freely. `translationKey` should remain untouched.
- I strongly suggest you to update the SEO in the frontmatter as well in your new language.

#### Custom 404 page

To add the custom 404 page and make it work on github pages or other hostings, you will have to add it manually when building the site executing `hugo`. This is because github pages looks for a 404 template in the root directory of the project, you can therefore only have one single 404 page for all the languages. To create a symlink to the english 404 version, which will then be used as default 404 once hosting, after running `hugo` run `ln -s public/en/404/index.html public/404.html`.

**Please refer to [themepage]()/[github](https://github.com/ololiuhqui/magnolia-free-hugo-theme) for more details #TODO.**
        """
    paragraph2= "" #You can use markdown to define your first paragraph look, but in case this isn't enough, here there's a secoind paragraph


[params.office]
  title = "The Office"
 description = "This page can be easily customized by adding a google maps link to get directions towards your activity location."
 buttonText = "Get directions" 
 buttonLink = "https://maps.app.goo.gl/LzsPzRkTYSZ8SF3y8" # google maps "share" link here (for button)
 mapLink = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d382266.44569392945!2d-76.55832397784323!3d41.53770983690751!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c4d93a77484bbb%3A0xfff27920ab9bfae8!2sScranton%2C%20Pennsylvania%2C%20Stati%20Uniti!5e0!3m2!1sit!2sit!4v1716459350324!5m2!1sit!2sit" # google maps "embed" link here

[params.contacts]
  title = "Get in touch!"
  formCallToAction = "This is a \"contact us\" example page, you can receive form responses on FormSpree."
  socialCallToAction = "You can add your own social media links below!" # These are the same as in [params.social]
  [params.contacts.form]
    formspreeLink = "https://yourformspreelink.com" #subscribe to formspree and add the link for the form here
    firstname = "Firstname*"
    lastname = "Lastname*"
    email = "E-mail*"
    phone = "Phone Number*"
    Inquiry = "Inquiry*"
    checkbox = "I accept that my data will be processed in accordance with the law*"
    submitBtn = "Submit"
[params.services]
  title = "Features"
  description = """ I built this theme with simplicity in mind, it is small and easily customizable, responsive, modular and multilingual. But it also leaves some space to further in-depth customization since it uses Bootstrap and SCSS.
  This page also shows an example of how you can change the site`s page names: The site will use the `services.html` layout for this page, but the page will be called "Features" and the link will use the related permalink `/features`."""
  [params.services.list]
    # You can add as much params.services.list.<N> as you like
    [params.services.list.0]
      title= "Responsive"
      description= "The theme is fully responsive and shows perfectly on every screen size."
    [params.services.list.01]
      title = "Modular"
      description= "Hide and show some elements easily from the config file."
    [params.services.list.02]
      title = "Multilingual"
      description= "The default content language is english (it can be changed), but you can add as many languages as you want very easily, the theme includes an italian language example and a dropdown menÃ¹ for easily switching between languages. Permalinks can be localized in each language (eg. you can have `/contacts` for english and `/contatti` for italian)."
    [params.services.list.03]
      title = "Customizable"
      description= "The page content can be customized from within the config files."
    [params.services.list.04]
      title = "SEO ready"
      description= "Every page in /content has an easily customizable meta description and a unique meta title for better and easier indexing. The theme will use the image `static/img/meta-image` as meta image for Google, Meta and X."
    [params.services.list.05]
      title = "Google Analytics supported"
      description= "Insert your Google Analytics tag in the `config.toml` file and be ready to track your site performances easily."
    [params.services.list.06]
      title = "Google Maps Included"
      description= "The contact page can be easily customized by adding a google maps link to get directions towards your activity location."


  
# /. PAGES

[params.socials]
  enabled = true # enables/disables the whole social section in the footer
  callToAction= "Get connected with us on social networks >"
      [[params.socials.link]]
        name = "github"
        link = "https://github.com/ololiuhqui/magnolia-free-hugo-theme"
      [[params.socials.link]]
        name = "linkedin"
        link = ""
      [[params.socials.link]]
        name = "whatsapp"
        link = ""
      # You can add other socials here by copypasting the above section and
      # selecting the right name for the icon from here https://icons.getbootstrap.com/

[params.schedules] # Time schedules (eg. your office openming hours)
  enabledFooter = false # This will add the schedules on the footer too
  enabledContacts = true # This will add the schedule to the contact page
  title = "Office hours" # For contacts page only
  [params.schedules.days]
  # Use something like "Monday: 9-13" for each day
  # if left empty it is disabled (default)
    day1 = "Monday: 9am â€“ 7pm"
    day2 = "Tuesday: 9am â€“ 7pm"
    day3 = "Wednesday: 9am â€“ 7pm"
    day4 = "Thursday: 9am â€“ 7pm"
    day5 = "Friday: 9am â€“ 7pm"
    day6 = ""
    day7 = ""

[params.footer]
  extraDescription1 = "Straight outta Scranton city"
  extraDescription2 = "VAT No. 0000000000"
  [params.footer.navigate]
  heading = "Navigate"   
  [params.footer.contacts]
  enabled = true # enables/disables the whole contacts section in footer
  heading = "Contact"
  address = "Scranton 2865 Pouros Corners 55441-0788"
  mail = "dundermifflin@fakemail.com"
  mail2 = "dundermifflinorders@fakemail.com"
  phone = "+00 0000000"
  
[params.notfound]
  title = "404, page not found" # text for 404 page

[menus]
# PageRef should refer to the "translationKey" in `/content/<page>` frontmatter, names can be changed freely
  [[menus.main]]
  name = "Home"
  pageRef = "/"
  weight = 1
  [[menus.main]]
  name = "Features"
  pageRef = "/services"
  weight = 2
  [[menus.main]]
  name = "The Office"
  pageRef = "/office"
  weight = 3
  [[menus.main]]
  name = "Contacts"
  pageRef = "/contacts"
  weight = 4